import {Header} from "../../../widgets/header";
import {CalendarWidget} from "../../../widgets/calendar-widget";
import styles from './styles.module.scss'
import {useState} from "react";
import {TextModal} from "../../../widgets/text-modal";
import {Button} from "../../../widgets/button";

const dates = [
  new Date(2024, 11, 1),
  new Date(2024, 11, 15),
  new Date(2024, 11, 30),
  new Date(2024, 11, 10),
]

const PartTimeWorkPage = () => {
  const [textModalOpen, setTextModalOpen] = useState(true);
  const [selectedDates, setSelectedDates] = useState([]);
  const [elementForTextModal, setElementForTextModal] = useState(
    <p style={{textAlign: "center", width: 231, fontSize: 14}}>
      –í—ã–±–µ—Ä–∏ –∂–µ–ª–∞–µ–º—ã–µ –¥–Ω–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã, –æ–Ω–∏ –±—É–¥—É—Ç –≤—ã–¥–µ–ª—è—Ç—å—Å—è <span style={{color: '#55C3CD'}}>—Å–∏–Ω–∏–º</span>.<br/><br/>–ü—Ä–∏—à–ª–µ–º
      –æ—Ç–≤–µ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –≤ —á–∞—Ç!
    </p>
  );

  const selectDay = (date) => {
    if (!(!!dates.find((item) => item.getTime() === date.getTime()))) {
      if (!!selectedDates.find((item) => item.getTime() === date.getTime())) {
        setSelectedDates(selectedDates.filter((item) => item.getTime() !== date.getTime()))
      } else {
        setSelectedDates([...selectedDates, date])
      }
    }
  }

  const getTileClassName = (date) => {
    let className = '';
    if (!!dates.find((item) => item.getTime() === date.getTime())) {
      className += styles.day
    } else if (!!selectedDates.find((item) => item.getTime() === date.getTime())) {
      className += styles.choiceDay
    }
    return className
  }

  const onClickButton = () => {
    setElementForTextModal(
      <p style={{ textAlign: "center", width: 236 }}>
        –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–± –æ—Ç–≤–µ—Ç–µ –æ–ø–æ–≤–µ—Å—Ç–∏–º –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º üî•
      </p>
    )
    setTextModalOpen(true)
  }

  return (
    <>
      <Header>–í—ã–±–µ—Ä–∏—Ç–µ —Å–º–µ–Ω—ã</Header>
      <CalendarWidget
        className={styles.calendar}
        onClickDay={(date) => selectDay(date)}
        tileClassName={({date}) => getTileClassName(date)}
      />
      <Button onClick={() => onClickButton()} className={styles.button}>–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</Button>
      { textModalOpen && <TextModal setModalOpen={setTextModalOpen}>
        {elementForTextModal}
      </TextModal> }
    </>
  )
}

export default PartTimeWorkPage;
