from datetime import datetime

from aiogram import Router, types, F, Bot
from aiogram.fsm.context import FSMContext

from bot.misc import functions
from bot.services import salaries_service, users_service, adjustments_service
from bot import keyboards

# TEST
from bot.misc import test

callbacks_router = Router()


@callbacks_router.callback_query(F.data == 'salary')
async def salary(callback: types.CallbackQuery, bot: Bot):
    await functions.delete_message(bot=bot, chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    user = await users_service.get_by_tg_id(callback.from_user.id)
    months = await salaries_service.get_months(user['name'])
    await callback.message.answer_photo(
        photo=types.FSInputFile('./files/–ó–∞—Ä–ø–ª–∞—Ç—ã.png'),
        caption='–í—ã–±–µ—Ä–∏ –º–µ—Å—è—Ü, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ üìÖ\n\n'
             '–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –∑–∞—Ä–ø–ª–∞—Ç–µ üí∞',
        reply_markup=keyboards.functionals.salary.get_salary_months_keyboard(months)
    )


@callbacks_router.callback_query(F.data.startswith('salary_'))
async def salary_detailing(callback: types.CallbackQuery, bot: Bot, state: FSMContext):
    mouth = callback.data.split('_')[1]
    await state.update_data(mouth=mouth)

    await functions.delete_message(bot=bot, chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    await callback.message.answer_photo(
        photo=types.FSInputFile('./files/–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—Ä–ø–ª–∞—Ç.png'),
        caption='–ó–∞—Ä–ø–ª–∞—Ç–∞ ‚Äî —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—è—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç! –ê —É –Ω–∞—Å –≤—Å—ë —á—ë—Ç–∫–æ –∏ –≤–æ–≤—Ä–µ–º—è:\n\n'
             '<b>- –ó–∞ –ø–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –º–µ—Å—è—Ü–∞ (1‚Äì15 —á–∏—Å–ª–∞)</b> ‚Äî –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç–µ —É–∂–µ <b>20 —á–∏—Å–ª–∞</>.\n'
             '<b>- –ó–∞ –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω—É (16‚Äì30/31 —á–∏—Å–ª–∞)</b> ‚Äî –∂–¥–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è <b>5 —á–∏—Å–ª–∞</b>.\n\n'
             '–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã, –∞ –æ –≤—ã–ø–ª–∞—Ç–∞—Ö –º—ã –ø–æ–∑–∞–±–æ—Ç–∏–º—Å—è üíº',
        parse_mode='HTML',
        reply_markup=keyboards.functionals.salary.DETAILING_KEYBOARD
    )


@callbacks_router.callback_query(F.data == 'detailing_by_points')
async def salary_by_points(callback: types.CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    user = await users_service.get_by_tg_id(callback.from_user.id)
    user_name = user['name']
    mouth = data['mouth']
    points = await salaries_service.get_names_points(user_name, mouth)
    await functions.delete_message(bot=bot, chat_id=callback.message.chat.id, message_id=callback.message.message_id)

    await state.update_data(mouth=mouth, user_name=user_name)
    await callback.message.answer_photo(
        photo=types.FSInputFile('./files/–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–æ—á–∫–∞–º.png'),
        reply_markup=await keyboards.functionals.salary.salary_points_keyboard(points, mouth)
    )


@callbacks_router.callback_query(F.data.startswith('salary-point_'))
async def salary_point(callback: types.CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    point_name = callback.data.split('_')[1]
    index_mouth = int(data['mouth']) - 1
    data_adjustment = await adjustments_service.get_all_by_names(point_name, data['user_name'], index_mouth)
    sums = await salaries_service.get_sums(point_name, data['user_name'], data['mouth'])
    await functions.delete_message(bot=bot, chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    formatted_amount_1 = "{:,.0f}".format(sums['sum1']).replace(',', ' ') + "‚ÇΩ"
    formatted_amount_2 = "{:,.0f}".format(sums['sum2']).replace(',', ' ') + "‚ÇΩ"
    await callback.message.answer(
        text='<b>–ò—Ç–æ–≥–∏ –ø–æ –≤–∞—à–∏–º –≤—ã–ø–ª–∞—Ç–∞–º –Ω–∞ —ç—Ç–æ–π —Ç–æ—á–∫–µ:</b> \n'
             f'\n<b>–° 1 –ø–æ 15 —á–∏—Å–ª–æ</b> –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏:\n'
             f'üëâ {formatted_amount_1}\n'
             f'<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data_adjustment[0]['comment']}\n'
             f'<b>–û—Ñ—Ñ.–∑–ø/—É–¥–µ—Ä–∂–∞–Ω–∏—è:</b> {data_adjustment[0]["offZp"]}‚ÇΩ\n'
             f'<b>–ü—Ä–µ–º–∏—è:</b> {data_adjustment[0]["awards"]}‚ÇΩ\n'
             f'<b>–®—Ç—Ä–∞—Ñ—ã:</b> {data_adjustment[0]['fines']}‚ÇΩ\n'
             f'\n<b>–° 16 –ø–æ 30/31 —á–∏—Å–ª–æ</b> –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –æ–∫–∞–∑–∞–ª–æ—Å—å:\n'
             f'üëâ {formatted_amount_2}\n'
             f'<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data_adjustment[1]['comment']}\n'
             f'<b>–û—Ñ—Ñ.–∑–ø/—É–¥–µ—Ä–∂–∞–Ω–∏—è:</b> {data_adjustment[1]["offZp"]}‚ÇΩ\n'
             f'<b>–ü—Ä–µ–º–∏—è:</b> {data_adjustment[1]["awards"]}‚ÇΩ\n'
             f'<b>–ê–≤–∞–Ω—Å:</b> {data_adjustment[1]['advance']}‚ÇΩ\n'
                '–í–∞—à —Ç—Ä—É–¥ —Ü–µ–Ω–µ–Ω, –∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ ‚Äî –∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ –≤–∞—à–µ! üöÄüî•',
        parse_mode='HTML',
        reply_markup=keyboards.functionals.salary.BACK_DETAILING_KEYBOARD
    )


@callbacks_router.callback_query(F.data == 'detailing_by_days')
async def salary_by_days(callback: types.CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    user = await users_service.get_by_tg_id(callback.from_user.id)
    user_name = user['name']
    mouth = data['mouth']
    data_salary = await salaries_service.get_by_name_point_employee_name(user_name, mouth)
    await functions.delete_message(bot=bot, chat_id=callback.message.chat.id, message_id=callback.message.message_id)

    index_mouth = int(data['mouth']) - 1
    unique_points = set(item['pointName'] for item in data_salary)

    analytics_text = "<b>–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º –∑–∞ –º–µ—Å—è—Ü</b> üìÖ\n\n"
    analytics_text += "<pre>–î–∞—Ç–∞ |   –¢–æ—á–∫–∞      |–°—É–º–º–∞ \n"

    for item in data_salary:
        date_str = datetime.strptime(item['date'], '%Y-%m-%d').strftime('%d.%m')
        formatted_sum = "{:,.0f}".format(item['sum']).replace(',', ' ') + "‚ÇΩ"
        analytics_text += f"{date_str:<3}| {item['pointName']:<12} |{formatted_sum}\n"

    analytics_text += "</pre>"
    # period_totals = {
    #     "1-15": {"awards": 0, "fines": 0, "offZp": 0, "advance": 0, "comment": ""},
    #     "16-31": {"awards": 0, "fines": 0, "offZp": 0, "advance": 0, "comment": ""},
    #     "total": {"awards": 0, "fines": 0, "offZp": 0, "advance": 0, "comment": ""}
    # }
    #
    # for point in unique_points:
    #     data_adjustment = await adjustments_service.get_all_by_names(point, user_name, index_mouth)
    #
    #     for adjustment in data_adjustment:
    #         period = adjustment['period']
    #         if period in period_totals:
    #             period_totals[period]['awards'] += adjustment.get('awards', 0)
    #             period_totals[period]['fines'] += adjustment.get('fines', 0) or 0
    #             period_totals[period]['offZp'] += adjustment.get('offZp', 0)
    #             period_totals[period]['advance'] += adjustment.get('advance', 0) or 0
    #
    #         period_totals["total"]['awards'] += adjustment.get('awards', 0)
    #         period_totals["total"]['fines'] += adjustment.get('fines', 0) or 0
    #         period_totals["total"]['offZp'] += adjustment.get('offZp', 0)
    #         period_totals["total"]['advance'] += adjustment.get('advance', 0) or 0
    #
    # analytics_text += "\n<b>–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏:</b>\n"
    #
    # analytics_text += f"  - –ü—Ä–µ–º–∏–∏: {period_totals['total']['awards']}‚ÇΩ\n"
    # analytics_text += f"  - –®—Ç—Ä–∞—Ñ—ã: {period_totals['total']['fines']}‚ÇΩ\n"
    # analytics_text += f"  - –û—Ñ—Ñ: {period_totals['total']['offZp']}‚ÇΩ\n"
    # analytics_text += f"  - –ê–≤–∞–Ω—Å: {period_totals['total']['advance']}‚ÇΩ\n"

    await callback.message.answer_photo(
        photo=types.FSInputFile('./files/–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –¥–Ω—è–º.png'),
        caption=analytics_text,
        parse_mode='HTML',
        reply_markup=await keyboards.functionals.salary.back_by_days_keyboard(mouth)
    )